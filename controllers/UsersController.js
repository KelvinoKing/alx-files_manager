/**
 * Inside controllers, add a file UsersController.js that contains the new endpoint:
 * POST /users should create a new user in DB:
 * To create a user, you must specify an email and a password
 * If the email is missing, return an error Missing email with a status code 400
 * If the password is missing, return an error Missing password with a status code 400
 * If the email already exists in DB, return an error Already exist with a status code 400
 * The password must be stored after being hashed in SHA1
 * The endpoint is returning the new user with only the email and the id
 * (auto generated by MongoDB) with a status code 201
 * The new user must be saved in the collection users:
 * email: same as the value received
 * password: SHA1 value of the value received
 */

import { ObjectId } from 'mongodb';
import sha1 from 'sha1';
import dbClient from '../utils/db';
import redisClient from '../utils/redis';

class UsersController {
  static async postNew(req, res) {
    const { email, password } = req.body;

    if (!email) return res.status(400).send({ error: 'Missing email' });
    if (!password) return res.status(400).send({ error: 'Missing password' });

    const userExists = await dbClient.client.db().collection('users').find({ email }).toArray();
    if (userExists.length > 0) return res.status(400).send({ error: 'Already exist' });

    const user = await dbClient.client.db().collection('users').insertOne({
      email,
      password: sha1(password),
    });
    return res.status(201).send({ email, id: user.insertedId });
  }

  static async getMe(req, res) {
    const token = req.header('X-Token');
    if (!token) return res.status(401).send({ error: 'Unauthorized' });

    const key = `auth_${token}`;
    const userId = await redisClient.get(key);

    if (!userId) return res.status(401).send({ error: 'Unauthorized' });

    const user = await dbClient.client.db().collection('users').findOne({ _id: ObjectId(userId) });
    if (!user) return res.status(401).send({ error: 'Unauthorized' });

    return res.status(200).send({ id: user._id, email: user.email });
  }
}

export default UsersController;
